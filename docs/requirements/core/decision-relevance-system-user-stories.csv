User Story Title Summary,Plain Language Summary,User Story,Priority,Estimated Complexity,Acceptance Criteria,GitHub Issue Link,Technical Requirements,Implementation Considerations,Related Documentation,Related Issues/Stories
Calculate relevance scores for developer tools and debugging,"Ranks past player decisions based on how important they are to the current story moment, helping the AI focus on what matters most","As a developer, I want to calculate multi-factor relevance scores for past decisions so that the most applicable ones are prioritized for AI context",High (MVP),Medium,"The system calculates a composite relevance score between 0.0 and 1.0 for each past decision.\nThe scoring algorithm considers multiple factors including recency, tag matches, and impact.\nThe calculated scores (`overallScore`, `recencyScore`, etc.) are stored in the `DecisionRelevanceScore` object.\nHigher scoring decisions are prioritized for inclusion in the AI context",https://github.com/jerseycheese/Narraitor/issues/130,"The system must calculate relevance scores for past decisions based on multiple factors. It must accept a decision and the current narrative context as inputs. The system must consider factors such as recency, tag matches, and impact in its calculations. Results must be stored in a structured format for use in prioritization",Consider how different factors should be weighted in the overall relevance calculation. Think about the mathematical approach for combining scores from different factors. Balance computational efficiency against scoring accuracy since this may run frequently,"docs/requirements/core/decision-relevance-system.md, docs/workflows/user-story-workflow.md, docs/workflows/user-story-template.md",#131\n#132\n#133\n#134\n#135\n#138\n#142\n#140\n#210\n#211\n#198
Weight recent decisions for developer tools and debugging,"Makes newer player decisions more important than older ones, so the story feels current and responsive","As a developer, I want to weight recent decisions more heavily so that the narrative maintains recency bias for coherence",High (MVP),Small,The recency score decreases proportionally as the time difference between the decision and the current context increases.\nThe recency weighting is configurable via the `maxAge` parameter.\nVery old decisions (beyond `maxAge`) receive minimal or zero recency score.\nThe formula for recency decay is consistently applied across all decisions.,https://github.com/jerseycheese/Narraitor/issues/131,The system must calculate a recency score based on the time difference between decision creation and the current time. Older decisions must receive lower scores according to a decay function. The system must respect a configurable maximum age parameter beyond which decisions have minimal relevance,"Consider what type of decay function (linear, exponential, etc.) would best represent how decision relevance decreases over time. Think about edge cases such as decisions with missing timestamps or decisions far beyond the maximum age","docs/requirements/core/decision-relevance-system.md, docs/workflows/user-story-workflow.md, docs/workflows/user-story-template.md",#130\n#132\n#142\n#140\n#144\n#210\n#211\n#198
Configure algorithm parameters for developer tools and debugging,Lets developers adjust settings that control how the game remembers and prioritizes past player decisions,"As a developer, I want to configure relevance algorithm parameters so that the system can be tuned for optimal performance",Medium (MVP Enhancement),Small,"The relevance algorithm parameters (`recencyWeight`, `tagMatchWeight`, `importanceWeight`, etc.) can be adjusted in the `RelevanceConfig`.\nChanges to configuration parameters take effect immediately for subsequent relevance calculations.\nParameters have reasonable default values that work without manual configuration.\nParameter values are validated to ensure they remain within acceptable ranges",https://github.com/jerseycheese/Narraitor/issues/132,The system must provide a way to configure and adjust relevance algorithm parameters. It must include reasonable default values that work without manual configuration. Parameter changes must take effect immediately for subsequent calculations. The system must validate parameter values to ensure they remain within acceptable ranges,Consider the initialization timing of configuration values and how they might be adjusted during runtime. Think about validation rules for different parameters and what constitutes reasonable defaults that balance different relevance factors effectively,"docs/requirements/core/decision-relevance-system.md, docs/workflows/user-story-workflow.md, docs/workflows/user-story-template.md",#130\n#131\n#133\n#134\n#135\n#138\n#142\n#141
Implement tag matching for developer tools and debugging,"Makes the story relate player choices to similar current themes, like remembering a wolf encounter when the player meets wolves again","As a developer, I want to implement tag matching between decisions and current context so that thematically relevant decisions are prioritized",High (MVP),Medium,The `tagMatchScore` increases based on the number of matching tags between the decision's tags and the `currentTags` in the `NarrativeContext`.\nDecisions that share multiple tags with the current context receive higher scores than those with fewer matches.\nThe tag matching algorithm handles both exact and partial tag matches.\nTag matching is case-insensitive to prevent mismatches due to capitalization differences,https://github.com/jerseycheese/Narraitor/issues/133,The system must compare tags associated with past decisions against tags in the current narrative context. It must calculate match scores based on the number and quality of matches. The system must handle case-insensitivity in tag comparison and support both exact and partial tag matching,Consider the scoring algorithm for different types of matches (exact vs. partial). Think about performance implications when comparing large sets of tags. The tag matching should balance accuracy with computational efficiency,"docs/requirements/core/decision-relevance-system.md, docs/workflows/user-story-workflow.md, docs/workflows/user-story-template.md",#130\n#132\n#142\n#140\n#210\n#211\n#198
Assess decision importance for developer tools and debugging,"Identifies which player choices were major story moments versus minor ones, so big decisions have more impact on the story","As a developer, I want to assess the importance of decisions based on their classification so that significant decisions have appropriate influence",Medium (MVP Enhancement),Small,Decisions have classification metadata that indicates their relative importance.\nThe system uses this classification to calculate an appropriate `importanceScore`.\nMore significant decisions receive higher importance scores in the relevance calculation.\nThe importance weighting can be configured in the `RelevanceConfig`,https://github.com/jerseycheese/Narraitor/issues/134,The system must recognize decision classification metadata that indicates relative importance. It must use this classification to calculate an appropriate importance score. Classifications representing more significant decisions must result in higher importance scores. The system must support configurable importance weighting,Consider what classification levels are most appropriate for the narrative context. Think about how importance weights should scale across different classification levels. The implementation should allow for future refinement of the classification scheme,"docs/requirements/core/decision-relevance-system.md, docs/workflows/user-story-workflow.md, docs/workflows/user-story-template.md",#130\n#132\n#135\n#142\n#140\n#210\n#211\n#198\n#196
Story prioritizes recent decisions appropriately,"Makes recent player choices affect the story more than older ones, so the game feels like it's responding to what you just did","As a user, I want the story to prioritize my recent decisions appropriately so that the narrative flow feels natural",Medium (MVP Enhancement),Medium,Recent decisions have greater influence on the narrative than older ones\nThe narrative references decisions from the current session more frequently\nMost recent significant choices are acknowledged in the story\nOlder decisions fade in relevance at an appropriate rate\nThe narrative maintains a sense of immediacy for recent actions,https://github.com/jerseycheese/Narraitor/issues/144,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nIntegration with narrative generation system,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement natural decay of older decisions' relevance,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#130\n#131\n#142\n#140\n#210\n#211\n#198\n#273\n#196
Continuity in narrative response to previous actions,"Makes the story remember and consistently reference player choices over time, so the world feels stable and coherent","As a user, I want continuity in how the narrative responds to my previous actions so that the story feels coherent",Medium (MVP Enhancement),Medium,The narrative maintains consistent references to past choices\nEstablished story elements persist throughout the narrative\nCharacter relationships reflect past decisions consistently\nDecision consequences remain stable unless explicitly changed\nThe world state evolves coherently based on player choices,https://github.com/jerseycheese/Narraitor/issues/143,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nConsistency tracking for narrative elements,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement persistent context for key narrative elements,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#142\n#140\n#210\n#211\n#198\n#197\n#196\n#259\n#273
Narrative appropriately references past important decisions,"Makes the game remember and refer to player's major choices at the right moments, so choices feel meaningful and impactful","As a user, I want the narrative to appropriately reference my past important decisions so that the story feels responsive to my choices",Medium (MVP Enhancement),Medium,Important decisions receive appropriate emphasis in narrative generation\nSignificant choices are referenced in contextually relevant situations\nMajor decisions have lasting impact on the storyline\nNarrative references vary in style to avoid repetition\nReferences feel natural within the story context,https://github.com/jerseycheese/Narraitor/issues/142,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nImportance-based decision highlighting,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement contextual reference generation for key decisions,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#130\n#131\n#132\n#133\n#134\n#135\n#140\n#143\n#144\n#210\n#211\n#196\n#198\n#273
Expose debugging tools for relevance system,Provides developer tools to see exactly why certain past decisions are being remembered by the AI and others aren't,"As a developer, I want to expose debugging tools for the relevance system so that the scoring can be monitored and adjusted",Medium (MVP Enhancement),Medium,Developers can view detailed relevance scores for all decisions\nDebugging tools show the breakdown of composite scores by factor\nScore calculations can be traced step by step\nRelevance parameter adjustments can be tested in real-time\nDebugging output is comprehensive but well-organized,https://github.com/jerseycheese/Narraitor/issues/141,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nDebug visualization components\nParameter adjustment interface,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement intuitive visualization of complex relevance data,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/devtools.md",#130\n#131\n#132\n#133\n#134\n#202\n#203\n#213\n#212
Relevance system provides optimized context to narrative engine,"Efficiently packages player's past choices for the AI to use, selecting only what's important within technical limits","As a developer, I want the relevance system to provide optimized context to the narrative engine so that AI generation has appropriate history",Medium (MVP Enhancement),Medium,The system selects the most relevant decisions for narrative context\nContext is optimized to respect AI token limitations\nCritical decisions are never omitted from context\nDecision context is formatted for optimal AI processing\nContext generation is performant and reliable,https://github.com/jerseycheese/Narraitor/issues/140,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nContext optimization algorithms\nToken-aware selection mechanisms,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nBalance context quality with token efficiency,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#130\n#131\n#132\n#133\n#134\n#135\n#136\n#137\n#138\n#198\n#273\n#203\n#142\n#143
Relevance system integrates with player decision system,"Connects the system that tracks past choices with the system that determines which ones matter, creating a seamless experience","As a developer, I want the relevance system to integrate with the player decision system so that decision history is accessible",Medium (MVP Enhancement),Medium,The relevance system can access all player decisions\nNew decisions are immediately available for relevance processing\nDecision metadata is correctly interpreted by the relevance system\nThe integration respects system boundaries and follows best practices\nPerformance overhead is minimal for decision retrieval,https://github.com/jerseycheese/Narraitor/issues/139,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nSystem integration interfaces\nEfficient data access patterns,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement clean separation of concerns across systems,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/player-decision-system.md",#207\n#210\n#211\n#130\n#140\n#141
Set minimum relevance threshold for developer tools and,"Ensures only truly important past decisions are remembered, preventing the story from getting bogged down with trivial details","As a developer, I want to set a minimum relevance threshold so that only meaningfully relevant decisions are included",Medium (MVP Enhancement),Medium,The system enforces a minimum relevance score threshold\nDecisions below the threshold are excluded from context\nThe threshold is configurable through the relevance settings\nThreshold application is consistent across all context generation\nThe system warns when too many decisions are excluded,https://github.com/jerseycheese/Narraitor/issues/138,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nThreshold configuration interface\nExclusion monitoring,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement safeguards against over-filtering,docs/requirements/core/decision-relevance-system.md,#130\n#132\n#140\n#136\n#141
Format decisions efficiently for AI context,Compresses player choice history into a format that's both compact for the AI and preserves all important details,"As a developer, I want to format decisions efficiently for the AI context so that token limits are respected",Medium (MVP Enhancement),Medium,Decision information is formatted concisely for AI consumption\nThe formatting preserves all essential decision information\nToken usage is optimized without losing critical context\nFormatting is consistent and machine-readable\nThe system adapts formatting based on decision importance,https://github.com/jerseycheese/Narraitor/issues/137,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nToken-efficient formatting templates\nAdaptive context generation,Use standard implementation approach for this feature\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nBalance information preservation with token efficiency,"docs/requirements/core/decision-relevance-system.md, docs/requirements/integrations/ai-service.md",#130\n#135\n#140\n#136\n#273\n#203
Select the most relevant decisions for AI context,"Chooses which past player decisions to remember, focusing on what's most relevant to the current moment in the story","As a developer, I want to select the most relevant decisions for AI context so that token usage is optimized",Medium (MVP Enhancement),Medium,"The system selects decisions based on their relevance scores\nSelection balances recency, importance, and thematic relevance\nThe number of selected decisions respects token limitations\nSelection preserves narrative continuity and coherence\nThe selection algorithm is deterministic and testable",https://github.com/jerseycheese/Narraitor/issues/136,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nSelection algorithm with multiple factors\nToken budget management,Follow the Context Optimization module pattern for the develop functionality\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement flexible selection strategies for different contexts,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#130\n#131\n#132\n#133\n#134\n#135\n#137\n#138\n#140\n#273\n#203
Decision impact evaluation for developer tools and debugging,"Analyzes how much each player choice has changed the game world, so major decisions have appropriately large effects","As a developer, I want to evaluate decision consequences to include decisions with major narrative impacts",Medium (MVP Enhancement),Medium,The system identifies decisions with significant narrative consequences\nImpact assessment considers both immediate and long-term effects\nThe evaluation considers direct and indirect consequences\nHigh-impact decisions receive priority in relevance scoring\nThe system tracks causal relationships between decisions,https://github.com/jerseycheese/Narraitor/issues/135,Basic multi-factor relevance scoring algorithm\nRecency weighting based on time elapsed\nSimple tag matching for contextual relevance\nConsequence evaluation mechanisms\nNarrative impact assessment,Follow the Context Matching module pattern for the develop functionality\nEnsure compatibility with existing system architecture\nWrite tests first following TDD approach\nImplement nuanced impact evaluation for narrative decisions,"docs/requirements/core/decision-relevance-system.md, docs/requirements/core/narrative-engine.md",#130\n#134\n#140\n#136\n#196\n#210\n#198\n#142
